{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _tether = _interopRequireDefault(require(\"tether\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nif (!_tether.default) {\n  console.error('It looks like Tether has not been included. Please load this dependency first https://github.com/HubSpot/tether');\n}\n\nvar renderElementToPropTypes = [_propTypes.default.string, _propTypes.default.shape({\n  appendChild: _propTypes.default.func.isRequired\n})];\n\nvar childrenPropType = function childrenPropType(_ref, propName, componentName) {\n  var children = _ref.children;\n\n  var childCount = _react.Children.count(children);\n\n  if (childCount > 0) {\n    return new Error(\"\".concat(componentName, \" no longer uses children to render components. Please use renderTarget and renderElement instead.\"));\n  }\n};\n\nvar attachmentPositions = ['auto auto', 'top left', 'top center', 'top right', 'middle left', 'middle center', 'middle right', 'bottom left', 'bottom center', 'bottom right'];\n\nvar TetherComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TetherComponent, _Component);\n\n  function TetherComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TetherComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TetherComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_targetNode\", _react.default.createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_elementNode\", _react.default.createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_elementParentNode\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_tetherInstance\", null);\n\n    return _this;\n  }\n\n  _createClass(TetherComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._createContainer(); // The container is created after mounting\n      // so we need to force an update to\n      // enable tether\n      // Cannot move _createContainer into the constructor\n      // because of is a side effect: https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects\n\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If the container related props have changed, then update the container\n      if (prevProps.renderElementTag !== this.props.renderElementTag || prevProps.renderElementTo !== this.props.renderElementTo) {\n        this._createContainer();\n      } // Verify if className props have changed\n\n\n      if (this._elementParentNode && prevProps.className !== this.props.className) {\n        var _this$_elementParentN, _this$_elementParentN2; // Add a bunch of checks against weird classNames\n\n\n        var prevClasses = (prevProps.className || '').split(' ').filter(function (value) {\n          return value.length > 0;\n        });\n        var currClasses = (this.props.className || '').split(' ').filter(function (value) {\n          return value.length > 0;\n        });\n\n        (_this$_elementParentN = this._elementParentNode.classList).remove.apply(_this$_elementParentN, _toConsumableArray(prevClasses));\n\n        (_this$_elementParentN2 = this._elementParentNode.classList).add.apply(_this$_elementParentN2, _toConsumableArray(currClasses));\n      }\n\n      this._update();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._destroy();\n    }\n  }, {\n    key: \"getTetherInstance\",\n    value: function getTetherInstance() {\n      return this._tetherInstance;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this._tetherInstance.disable();\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this._tetherInstance.enable();\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, handler, ctx) {\n      this._tetherInstance.on(event, handler, ctx);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, handler, ctx) {\n      this._tetherInstance.once(event, handler, ctx);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, handler) {\n      this._tetherInstance.off(event, handler);\n    }\n  }, {\n    key: \"position\",\n    value: function position() {\n      this._tetherInstance.position();\n    }\n  }, {\n    key: \"_runRenders\",\n    value: function _runRenders() {\n      // To obtain the components, we run the render functions and pass in the ref\n      // Later, when the component is mounted, the ref functions will be called\n      // and trigger a tether update\n      var targetComponent = typeof this.props.renderTarget === 'function' ? this.props.renderTarget(this._targetNode) : null;\n      var elementComponent = typeof this.props.renderElement === 'function' ? this.props.renderElement(this._elementNode) : null; // Check if what has been returned is a valid react element\n\n      if (!(0, _react.isValidElement)(targetComponent)) {\n        targetComponent = null;\n      }\n\n      if (!(0, _react.isValidElement)(elementComponent)) {\n        elementComponent = null;\n      }\n\n      return {\n        targetComponent: targetComponent,\n        elementComponent: elementComponent\n      };\n    }\n  }, {\n    key: \"_createTetherInstance\",\n    value: function _createTetherInstance(tetherOptions) {\n      if (this._tetherInstance) {\n        this._destroy();\n      }\n\n      this._tetherInstance = new _tether.default(tetherOptions);\n\n      this._registerEventListeners();\n    }\n  }, {\n    key: \"_destroyTetherInstance\",\n    value: function _destroyTetherInstance() {\n      if (this._tetherInstance) {\n        this._tetherInstance.destroy();\n\n        this._tetherInstance = null;\n      }\n    }\n  }, {\n    key: \"_registerEventListeners\",\n    value: function _registerEventListeners() {\n      var _this2 = this;\n\n      this.on('update', function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return _this2.props.onUpdate && _this2.props.onUpdate.apply(_this2, args);\n      });\n      this.on('repositioned', function () {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return _this2.props.onRepositioned && _this2.props.onRepositioned.apply(_this2, args);\n      });\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      this._destroyTetherInstance();\n\n      this._removeContainer();\n    }\n  }, {\n    key: \"_createContainer\",\n    value: function _createContainer() {\n      // Create element node container if it hasn't been yet\n      this._removeContainer();\n\n      var _this$props = this.props,\n          renderElementTag = _this$props.renderElementTag,\n          className = _this$props.className; // Create a node that we can stick our content Component in\n\n      this._elementParentNode = document.createElement(renderElementTag);\n      this._elementParentNode.className = className || '';\n    }\n  }, {\n    key: \"_addContainerToDOM\",\n    value: function _addContainerToDOM() {\n      // Append node to the render node\n      if (this._elementParentNode.parentNode !== this._renderNode) {\n        this._renderNode.appendChild(this._elementParentNode);\n      }\n    }\n  }, {\n    key: \"_removeContainer\",\n    value: function _removeContainer() {\n      if (this._elementParentNode && this._elementParentNode.parentNode) {\n        this._elementParentNode.parentNode.removeChild(this._elementParentNode);\n      }\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      // If no element component provided, bail out\n      var shouldDestroy = !this._elementNode.current || !this._targetNode.current;\n\n      if (shouldDestroy) {\n        // Destroy Tether element if it has been created\n        this._destroy();\n\n        return;\n      }\n\n      this._updateTether();\n    }\n  }, {\n    key: \"_updateTether\",\n    value: function _updateTether() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          renderElementTag = _this$props2.renderElementTag,\n          renderElementTo = _this$props2.renderElementTo,\n          id = _this$props2.id,\n          className = _this$props2.className,\n          style = _this$props2.style,\n          renderTarget = _this$props2.renderTarget,\n          renderElement = _this$props2.renderElement,\n          options = _objectWithoutProperties(_this$props2, [\"children\", \"renderElementTag\", \"renderElementTo\", \"id\", \"className\", \"style\", \"renderTarget\", \"renderElement\"]);\n\n      var tetherOptions = _objectSpread({\n        target: this._targetNode.current,\n        element: this._elementParentNode\n      }, options);\n\n      var idStr = id || '';\n\n      if (this._elementParentNode.id !== idStr) {\n        this._elementParentNode.id = idStr;\n      }\n\n      if (style) {\n        var elementStyle = this._elementParentNode.style;\n        Object.keys(style).forEach(function (key) {\n          if (elementStyle[key] !== style[key]) {\n            elementStyle[key] = style[key];\n          }\n        });\n      }\n\n      this._addContainerToDOM();\n\n      if (this._tetherInstance) {\n        this._tetherInstance.setOptions(tetherOptions);\n      } else {\n        this._createTetherInstance(tetherOptions);\n      }\n\n      this._tetherInstance.position();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$_runRenders = this._runRenders(),\n          targetComponent = _this$_runRenders.targetComponent,\n          elementComponent = _this$_runRenders.elementComponent;\n\n      if (!targetComponent) {\n        return null;\n      }\n\n      return _react.default.createElement(_react.default.Fragment, null, targetComponent, elementComponent && this._elementParentNode && _reactDom.default.createPortal(elementComponent, this._elementParentNode));\n    }\n  }, {\n    key: \"_renderNode\",\n    get: function get() {\n      var renderElementTo = this.props.renderElementTo;\n\n      if (typeof renderElementTo === 'string') {\n        return document.querySelector(renderElementTo);\n      }\n\n      return renderElementTo || document.body;\n    }\n  }]);\n\n  return TetherComponent;\n}(_react.Component);\n\n_defineProperty(TetherComponent, \"propTypes\", {\n  renderElementTag: _propTypes.default.string,\n  renderElementTo: _propTypes.default.oneOfType(renderElementToPropTypes),\n  attachment: _propTypes.default.oneOf(attachmentPositions).isRequired,\n  targetAttachment: _propTypes.default.oneOf(attachmentPositions),\n  offset: _propTypes.default.string,\n  targetOffset: _propTypes.default.string,\n  targetModifier: _propTypes.default.string,\n  enabled: _propTypes.default.bool,\n  classes: _propTypes.default.object,\n  classPrefix: _propTypes.default.string,\n  optimizations: _propTypes.default.object,\n  constraints: _propTypes.default.array,\n  id: _propTypes.default.string,\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  onUpdate: _propTypes.default.func,\n  onRepositioned: _propTypes.default.func,\n  renderTarget: _propTypes.default.func,\n  renderElement: _propTypes.default.func,\n  children: childrenPropType\n});\n\n_defineProperty(TetherComponent, \"defaultProps\", {\n  renderElementTag: 'div',\n  renderElementTo: null\n});\n\nvar _default = TetherComponent;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}