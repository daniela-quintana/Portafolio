{"ast":null,"code":"var _curry2 =\n/*#__PURE__*/\nrequire('./_curry2');\n\nvar _xfBase =\n/*#__PURE__*/\nrequire('./_xfBase');\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nmodule.exports = _xdrop;","map":{"version":3,"sources":["/Users/osx/Box Sync/Laboratoria/Proyectos/Portafolio/node_modules/ramda/src/internal/_xdrop.js"],"names":["_curry2","require","_xfBase","XDrop","n","xf","prototype","init","result","input","_xdrop","module","exports"],"mappings":"AAAA,IAAIA,OAAO;AAAG;AAAaC,OAAO,CAAC,WAAD,CAAlC;;AAEA,IAAIC,OAAO;AAAG;AAAaD,OAAO,CAAC,WAAD,CAAlC;;AAEA,IAAIE,KAAK;AAAG;AAAa,YAAY;AAEnC,WAASA,KAAT,CAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACpB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKD,CAAL,GAASA,CAAT;AACD;;AACDD,EAAAA,KAAK,CAACG,SAAN,CAAgB,mBAAhB,IAAuCJ,OAAO,CAACK,IAA/C;AACAJ,EAAAA,KAAK,CAACG,SAAN,CAAgB,qBAAhB,IAAyCJ,OAAO,CAACM,MAAjD;;AACAL,EAAAA,KAAK,CAACG,SAAN,CAAgB,mBAAhB,IAAuC,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB;AAC9D,QAAI,KAAKL,CAAL,GAAS,CAAb,EAAgB;AACd,WAAKA,CAAL,IAAU,CAAV;AACA,aAAOI,MAAP;AACD;;AACD,WAAO,KAAKH,EAAL,CAAQ,mBAAR,EAA6BG,MAA7B,EAAqCC,KAArC,CAAP;AACD,GAND;;AAQA,SAAON,KAAP;AACD,CAjBwB,EAAzB;;AAmBA,IAAIO,MAAM;AAAG;AAAaV,OAAO,CAAC,SAASU,MAAT,CAAgBN,CAAhB,EAAmBC,EAAnB,EAAuB;AACvD,SAAO,IAAIF,KAAJ,CAAUC,CAAV,EAAaC,EAAb,CAAP;AACD,CAFgC,CAAjC;;AAGAM,MAAM,CAACC,OAAP,GAAiBF,MAAjB","sourcesContent":["var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDrop = /*#__PURE__*/function () {\n\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nmodule.exports = _xdrop;"]},"metadata":{},"sourceType":"script"}