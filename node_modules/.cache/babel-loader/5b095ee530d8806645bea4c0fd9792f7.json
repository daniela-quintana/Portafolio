{"ast":null,"code":"var _curry2 =\n/*#__PURE__*/\nrequire('./internal/_curry2');\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = omit;","map":{"version":3,"sources":["/Users/osx/Box Sync/Laboratoria/Proyectos/Portafolio/node_modules/ramda/src/omit.js"],"names":["_curry2","require","omit","names","obj","result","index","idx","len","length","prop","hasOwnProperty","module","exports"],"mappings":"AAAA,IAAIA,OAAO;AAAG;AAAaC,OAAO,CAAC,oBAAD,CAAlC;AAEA;;;;;;;;;;;;;;;;;;AAkBA,IAAIC,IAAI;AAAG;AAAaF,OAAO,CAAC,SAASE,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;AACxD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAGL,KAAK,CAACM,MAAhB;;AAEA,SAAOF,GAAG,GAAGC,GAAb,EAAkB;AAChBF,IAAAA,KAAK,CAACH,KAAK,CAACI,GAAD,CAAN,CAAL,GAAoB,CAApB;AACAA,IAAAA,GAAG,IAAI,CAAP;AACD;;AAED,OAAK,IAAIG,IAAT,IAAiBN,GAAjB,EAAsB;AACpB,QAAI,CAACE,KAAK,CAACK,cAAN,CAAqBD,IAArB,CAAL,EAAiC;AAC/BL,MAAAA,MAAM,CAACK,IAAD,CAAN,GAAeN,GAAG,CAACM,IAAD,CAAlB;AACD;AACF;;AACD,SAAOL,MAAP;AACD,CAjB8B,CAA/B;;AAkBAO,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\n\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nmodule.exports = omit;"]},"metadata":{},"sourceType":"script"}