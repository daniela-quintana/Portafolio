{"version":3,"sources":["components/MyName.jsx","components/ScrambleText.jsx","views/Presentation.jsx","components/Buttons.jsx","views/Projects.jsx","components/Footer.jsx","views/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["MyName","class","React","Component","ScrambleText","className","autoStart","noBreakSpace","mouseLeaveTrigger","mouseEnterTrigger","text","steps","roll","action","type","Presentation","Buttons","href","this","props","btnClass","name","Projects","src","Footer","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4ZAaeA,G,wLARX,OACE,yBAAKC,MAAM,UACT,qD,GAJaC,IAAMC,Y,kBC4BZC,G,wLAzBX,OACA,yBAAKC,UAAU,gBACb,kBAAC,IAAD,CACEC,WAAS,EACTC,cAAY,EACZC,kBAAkB,UAClBC,kBAAkB,QAClBC,KAAK,sBACLC,MAAO,CACL,CACEC,KAAM,GACNC,OAAQ,IACRC,KAAM,OAER,CACED,OAAQ,IACRC,KAAM,mB,GAlBSZ,IAAMC,YCWlBY,G,wLARd,OACA,yBAAKV,UAAU,gBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALwBF,cCKZa,G,+LAJP,OAAO,4BAAQC,KAAOC,KAAKC,MAAMF,KAAOZ,UAAca,KAAKC,MAAMC,UAA1D,IAAyEF,KAAKC,MAAME,KAApF,S,GAFOlB,cCqCPmB,E,iLAnCX,OACE,6BACA,yCACA,yBAAKrB,MAAM,YAET,yBAAKI,UAAU,WACb,yBAAKkB,IAAI,wFAAwFlB,UAAU,gBAC3G,yCACA,wZACA,kBAAC,EAAD,CAASgB,KAAK,OAAOD,SAAU,QACnC,kBAAC,EAAD,CAASC,KAAK,cAAcD,SAAU,SAGpC,yBAAKf,UAAU,WACX,yBAAKkB,IAAI,wFAAwFlB,UAAU,iBAC3G,yCACA,wZACA,kBAAC,EAAD,CAASgB,KAAK,OAAOD,SAAU,QACnC,kBAAC,EAAD,CAASC,KAAK,cAAcD,SAAU,SAGtC,yBAAKf,UAAU,WACb,yBAAKkB,IAAI,wFAAwFlB,UAAU,gBAC3G,yCACA,wZACA,kBAAC,EAAD,CAASgB,KAAK,OAAOD,SAAS,QAClC,kBAAC,EAAD,CAASC,KAAK,cAAcD,SAAS,e,GA5BpBlB,IAAMC,WCQdqB,G,wLAPP,OACI,yBAAKnB,UAAU,UAAf,S,GAHSH,IAAMC,YCcZsB,G,wLATd,OACC,yBAAKpB,UAAU,QACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANgBF,cCMJuB,MATf,WACI,OACE,yBAAKrB,UAAU,OACX,kBAAC,EAAD,QCMUsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.53c10f71.chunk.js","sourcesContent":["import React from 'react'\nimport './MyName.css'\n\nclass MyName extends React.Component {\n  render() {\n    return (\n      <div class=\"myName\">\n        <h1>DANIELA QUINTANA</h1>\n     </div>\n    )\n  }\n}\n\nexport default MyName;","import React from 'react'\nimport Scramble from 'react-scramble'\nimport  '../components/ScrambleText.css'\n\nclass ScrambleText extends React.Component {\n  render() {\n    return (\n    <div className=\"scrambleText\">\n      <Scramble\n        autoStart\n        noBreakSpace\n        mouseLeaveTrigger=\"restart\"\n        mouseEnterTrigger=\"pause\"\n        text=\"FRONT-END DEVELOPER\"\n        steps={[\n          {\n            roll: 40,\n            action: '+',\n            type: 'all',\n          },\n          {\n            action: '-',\n            type: 'forward',\n          },\n        ]}\n      />\n    </div>\n    )\n  }\n}\n\nexport default ScrambleText;","import React, { Component } from 'react'\nimport MyName from '../components/MyName'\nimport ScrambleText from '../components/ScrambleText'\nimport './Presentation.css';\n\nclass Presentation extends Component {\nrender() {\n\treturn (\n\t<div className=\"presentation\">\n\t\t\t<MyName />\n\t\t\t<ScrambleText />\n\t</div>\t\n\t)\n}}\n\nexport default Presentation;","import React, { Component } from 'react';\nimport './Buttons.css'\n\n\nclass Buttons extends Component {\n    render() {\n        return <button href={ this.props.href } className = { this.props.btnClass } > { this.props.name } </button>\n    }\n}\n\nexport default Buttons;","import React from 'react'\nimport './Projects.css'\nimport Buttons from '../components/Buttons'\n\nclass Projects extends React.Component {\n  render() {\n    return (\n      <div>\n      <h1>Proyectos</h1>\n      <div class=\"projects\">\n        \n        <div className=\"mockup1\">\n          <img src='https://firmbee.com/freebies/files/201509/screenshots/iphone-926890_1443513337663.png' className=\"mockupsleft\"></img>\n          <h3>Migra.me!</h3>\n          <p>Migra.me es una aplicación web destinada a usuarios mayores de edad, que sean o no inmigrantes, ya que la misma se basa en la ayuda que se le puede dar a esa minoría desde cualquier ámbito. El enfoque hacia inmigrantes, es poder buscar información de interés sobre trámites en el país al que llegan, datos de alojamiento, arriendo, trabajo, cultural, etc. </p>\n          <Buttons name='Demo' btnClass= 'btn'/>\n\t\t\t\t  <Buttons name='Repositorio' btnClass= 'btn'/>\n        </div>\n\n        <div className=\"mockup2\">\n            <img src='https://firmbee.com/freebies/files/201509/screenshots/iphone-926890_1443513337663.png' className=\"mockupsrigth\"></img>\n            <h3>Migra.me!</h3>\n            <p>Migra.me es una aplicación web destinada a usuarios mayores de edad, que sean o no inmigrantes, ya que la misma se basa en la ayuda que se le puede dar a esa minoría desde cualquier ámbito. El enfoque hacia inmigrantes, es poder buscar información de interés sobre trámites en el país al que llegan, datos de alojamiento, arriendo, trabajo, cultural, etc. </p>\n            <Buttons name='Demo' btnClass= 'btn'/>\n\t\t\t\t    <Buttons name='Repositorio' btnClass= 'btn'/>\n        </div>\n\n        <div className=\"mockup1\">\n          <img src='https://firmbee.com/freebies/files/201509/screenshots/iphone-926890_1443513337663.png' className=\"mockupsleft\"></img>\n          <h3>Migra.me!</h3>\n          <p>Migra.me es una aplicación web destinada a usuarios mayores de edad, que sean o no inmigrantes, ya que la misma se basa en la ayuda que se le puede dar a esa minoría desde cualquier ámbito. El enfoque hacia inmigrantes, es poder buscar información de interés sobre trámites en el país al que llegan, datos de alojamiento, arriendo, trabajo, cultural, etc. </p>\n          <Buttons name='Demo' btnClass='btn'/>\n\t\t\t\t  <Buttons name='Repositorio' btnClass='btn'/>\n        </div>\n\n     </div>\n     </div>\n    )\n  }\n}\n\nexport default Projects;","import React from 'react';\nimport './Footer.css'\n\nclass Footer extends React.Component {\n    render(){\n        return(\n            <div className=\"footer\">_</div>\n        )\n    }\n\n}\n\nexport default Footer;","import React, { Component } from 'react'\nimport Presentation from './Presentation'\nimport Projects from './Projects'\nimport Footer from '../components/Footer'\nimport './Home.css';\n\nclass Home extends Component {\nrender() {\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<Presentation />\n\t\t\t<Projects />\n\t\t\t<Footer />\n\t</div>\t\n\t)\n}}\n\nexport default Home;","import React from 'react';\nimport Home from './views/Home'\n\nfunction App() {\n    return (\n      <div className=\"App\">\n          <Home />\n        </div>\n    );\n  }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}